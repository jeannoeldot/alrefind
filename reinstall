#!/bin/bash

#-------------------------------------------------------------------------------
# reinstall
#
# REINSTALLATION DE rEFInd 0.7.9
#
# ne fonctionne qu'avec la langue FR (fr_FR)
# Created by me for me
#
# Run this script after your first boot with archlinux-AAAA.MM.JJ-dual.iso (as root)

IS_ESP_MOUNTED=0
IS_NAME_ESP_EXISTE=0
NAME_PARTITION_ESP=""

CHEMIN_CONTENU_ESP=""

MOUNTPOINT_PARTITION_ESP="/mnt/boot/efi"

 
source `pwd`/ai-commons

mount_efi_partition_if_not_mounted() {
    if [[ $IS_ESP_MOUNTED -eq 0 ]]; then
        mkdir -p ${MOUNTPOINT_PARTITION_ESP}
        if [[ $? -ne 0 ]]; then
            return 1
        fi
        mount -t vfat ${NAME_PARTITION_ESP} ${MOUNTPOINT_PARTITION_ESP}
        if [[ $? -ne 0 ]]; then
            return 1
        fi
    fi
}

check_and_return_name_partition_esp() {
    local esp=(`fdisk -l | awk '/EFI System/ {print $1}'`)
    if [[ "${esp}" != "" ]];then
        IS_NAME_ESP_EXISTE=1
        NAME_PARTITION_ESP=${esp}
#        echo "une partition ESP existe et est : "${NAME_PARTITION_ESP}
    else
        IS_NAME_ESP_EXISTE=0
#        echo "PAS de partition ESP !"
    fi
}
#
check_is_esp_mounted() {
    local part_esp=(`lsblk | awk '/\/boot\/efi/ {print $7}'`)
    if [[ "${part_esp}" != "" ]];then
        IS_ESP_MOUNTED=1
#        echo "La partition ESP est montée. "
    else
        IS_ESP_MOUNTED=0
#        echo "La partition ESP n'est PAS montée."
    fi
}

    #FINISH {{{
    finish() {
        print_title "RÉINSTALLATION TERMINÉE"
        print_info_finish "\n==> INFO : Fermer tous les terminaux ouverts ( TTY 2, ... )."
        pause_function       
        #umount mounted partitions
        umount -R ${MOUNTPOINT}
        # Si dans VirtualBox
        if [[ $IN_VIRTUAL_BOX -eq 1 ]]; then
            print_info_finish "\n==> INFO : Dans VirtualBox, éteindre le système, modifier ordre de démarrage dans Système,\n           enlever ISO dans Stokage et relancer la VM."
        else
            echo -e "\n"
        fi
        type_fins=("Redémarrer" "Éteindre");
        PS3="$prompt1"
        echo -e "Sélectionner l'arrêt ( Redémarrer ou Éteindre ) :"
        select OPT in "${type_fins[@]}"; do
            case "$REPLY" in
                1)
                    reboot
                    break
                    ;;
                2)
                    poweroff
                    break
                    ;;
                *)
                    invalid_option
                    ;;
            esac
        done
    }
    #}}}

print_title "Réinstallation de rEFInd 0.7.9 si en UEFI"
# UEFI ou BIOS
check_is_uefi_or_bios
if [[ $IS_UEFI -eq 0 ]]; then
    print_warning "Installation en mode BIOS."
    print_warning "PAS de Réinstallation de rEFInd 0.7.9."
    pause_function
    exit 1
fi
# Editeur par défaut
print_info_cyan "L'éditeur par défaut est nano"
# Installation dans VirtualBox ou réelle
check_is_in_virtualbox
if [[ $IN_VIRTUAL_BOX -eq 1 ]]; then
    print_info_cyan "Installation dans Oracle VM VirtualBox."
else
    print_info_cyan "Installation réelle."
fi
# Sets the interval of inactivity
setterm -blank 0
pause_function
#
check_and_return_name_partition_esp
if [[ $IS_NAME_ESP_EXISTE -eq 0 ]]; then
    print_warning "PAS de partition ESP !"
    print_warning "PAS de Réinstallation de rEFInd 0.7.9 !"
    pause_function
    exit 1
fi
#
check_is_esp_mounted
if [[ $IS_ESP_MOUNTED -eq 0 ]]; then
    CHEMIN_CONTENU_ESP="${MOUNTPOINT_PARTITION_ESP}/EFI"
    print_info_cyan "PAS de partition ESP montée. !"
    print_info_cyan "A monter dans ${MOUNTPOINT_PARTITION_ESP}"
    print_info_cyan "Le chemin sera : "${CHEMIN_CONTENU_ESP}"/..."
    pause_function
else
    CHEMIN_CONTENU_ESP="/boot/efi/EFI"
    print_info_cyan "Partition ESP montée. !"
    print_info_cyan "Le chemin sera : "${CHEMIN_CONTENU_ESP}"/..."
    pause_function
fi
#
mount_efi_partition_if_not_mounted
if [[ $? -ne 0 ]]; then
    print_warning "Impossible de monter la partition ESP !"
    print_warning "PAS de Réinstallation de rEFInd 0.7.9 !"
    pause_function
    exit 1
fi
#
# TODO : MIS POUR VÉRIFICATIONS
print_info_cyan "Contenu de la partion ESP :"
ls ${CHEMIN_CONTENU_ESP}
pause_function
#

exit 0
